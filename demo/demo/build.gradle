plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.trimblecars'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	// Spring Boot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// Spring Cloud for Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Lombok for reducing boilerplate code
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// DevTools for hot reload during development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Apache POI for exporting Excel reports
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	// âœ… iText for exporting PDF reports
	implementation 'com.itextpdf:itextpdf:5.5.13.3'

	// JWT for authentication and authorization
	//implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	//runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Testing Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
